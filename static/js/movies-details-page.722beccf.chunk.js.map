{"version":3,"sources":["services/api.js","pages/MovieDetailsPage/MovieDetailsPage.module.css","components/Cast/Cast.js","components/Reviews/Reviews.js","pages/MovieDetailsPage/MovieDetailsPage.js"],"names":["key","popularMovies","axios","get","searchMovies","query","searchExactMovies","id","getCredits","getReviews","module","exports","Cast","state","cast","fetchMovie","API","then","res","setState","data","movieId","this","props","match","params","map","el","cast_id","src","profile_path","alt","name","character","Component","Reviews","reviews","results","length","author","content","MovieDetailsPage","movie","returnToPrevLoc","history","goBack","className","s","button","type","onClick","backdrop_path","title","vote_average","overview","genres","reduce","acc","e","to","url","path","exact","component"],"mappings":"yIAAA,+LAEMA,EAAM,mCAECC,EAAgB,kBAC3BC,IAAMC,IAAN,gEAAmEH,KAExDI,EAAe,SAAAC,GAAK,OAC/BH,IAAMC,IAAN,4DACuDH,EADvD,kBACoEK,KAGzDC,EAAoB,SAAAC,GAAE,OACjCL,IAAMC,IAAN,6CACwCI,EADxC,oBACsDP,EADtD,uCAIWQ,EAAa,SAAAD,GAAE,OAC1BL,IAAMC,IAAN,6CAAgDI,EAAhD,4BAAsEP,KAE3DS,EAAa,SAAAF,GAAE,OAC1BL,IAAMC,IAAN,6CACwCI,EADxC,4BAC8DP,EAD9D,6B,mBCpBFU,EAAOC,QAAU,CAAC,OAAS,mC,yHCENC,E,2MACnBC,MAAQ,CACNC,KAAM,I,EASRC,WAAa,SAAAR,GACXS,IAAeT,GAAIU,MAAK,SAAAC,GACtB,EAAKC,SAAS,CAAEL,KAAMI,EAAIE,KAAKN,W,mFARd,IAEXO,EADUC,KAAKC,MAAfC,MACkBC,OAAlBJ,QACRC,KAAKP,WAAWM,K,+BASR,IACAP,EAASQ,KAAKT,MAAdC,KACR,OACE,6BACE,4BACGA,EAAKY,KAAI,SAAAC,GAAE,OACV,wBAAI3B,IAAK2B,EAAGC,SACV,yBACEC,IAAG,0CAAqCF,EAAGG,cAC3CC,IAAI,KAEN,2BAAIJ,EAAGK,MACP,2BAAIL,EAAGM,qB,GA7BaC,aCAbC,E,2MACnBtB,MAAQ,CACNuB,QAAS,I,EASXrB,WAAa,SAAAR,GACXS,IAAeT,GAAIU,MAAK,SAAAC,GACtB,EAAKC,SAAS,CAAEiB,QAASlB,EAAIE,KAAKiB,c,mFARjB,IAEXhB,EADUC,KAAKC,MAAfC,MACkBC,OAAlBJ,QACRC,KAAKP,WAAWM,K,+BASR,IACAe,EAAYd,KAAKT,MAAjBuB,QACR,OACE,6BACGA,EAAQE,OAAS,EAChB,4BACGF,EAAQV,KAAI,SAAAC,GAAE,OACb,wBAAI3B,IAAK2B,EAAGpB,IACV,2BAAIoB,EAAGY,QACP,2BAAIZ,EAAGa,cAKb,yC,GA/B2BN,a,6DCMhBO,E,2MACnB5B,MAAQ,CACN6B,MAAO,KACP5B,KAAM,KACNsB,QAAS,M,EAOXrB,WAAa,WAAO,IAEVM,EADU,EAAKE,MAAfC,MACkBC,OAAlBJ,QACRL,IAAsBK,GAASJ,MAAK,SAAAC,GAAG,OACrC,EAAKC,SAAS,CAAEuB,MAAOxB,EAAIE,W,EAI/BuB,gBAAkB,WACI,EAAKpB,MAAjBqB,QACAC,U,mFAbRvB,KAAKP,e,+BAgBG,IACA2B,EAAUpB,KAAKT,MAAf6B,MACAlB,EAAUF,KAAKC,MAAfC,MAER,OACE,6BACE,4BACEsB,UAAWC,IAAEC,OACbC,KAAK,SACLC,QAAS5B,KAAKqB,iBAHhB,WAOCD,GACC,oCACE,6BACE,yBACEb,IAAG,0CAAqCa,EAAMS,eAC9CpB,IAAI,KAEN,4BAAKW,EAAMU,OACX,0CAAqC,GAArBV,EAAMW,aAAtB,KACA,wCAAcX,EAAMY,UACpB,qCACU,IACPZ,EAAMa,OAAOC,QAAO,SAACC,EAAKC,GAAN,gBAAeD,EAAf,YAAsBC,EAAE1B,QAAQ,KAGvD,sDACA,4BACE,4BACE,kBAAC,IAAD,CAAM2B,GAAE,UAAKnC,EAAMoC,IAAX,UAAR,SAEF,4BACE,kBAAC,IAAD,CAAMD,GAAE,UAAKnC,EAAMoC,IAAX,aAAR,aAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAI,UAAKrC,EAAMqC,KAAX,SAAwBC,OAAK,EAACC,UAAWnD,IACpD,kBAAC,IAAD,CAAOiD,KAAI,UAAKrC,EAAMqC,KAAX,YAA2BE,UAAW5B,W,GAhEjBD","file":"static/js/movies-details-page.722beccf.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst key = '2964dee6f9b3937b53e885a7fa2424ff';\n\nexport const popularMovies = () =>\n  axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${key}`);\n\nexport const searchMovies = query =>\n  axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${query}`,\n  );\n\nexport const searchExactMovies = id =>\n  axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${key}&append_to_response=videos,images`,\n  );\n\nexport const getCredits = id =>\n  axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${key}`);\n\nexport const getReviews = id =>\n  axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${key}&language=en-US&page=1`,\n  );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"MovieDetailsPage_button__3SJGN\"};","import React, { Component } from 'react';\nimport * as API from '../../services/api';\n\nexport default class Cast extends Component {\n  state = {\n    cast: [],\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { movieId } = match.params;\n    this.fetchMovie(movieId);\n  }\n\n  fetchMovie = id => {\n    API.getCredits(id).then(res => {\n      this.setState({ cast: res.data.cast });\n    });\n  };\n\n  render() {\n    const { cast } = this.state;\n    return (\n      <div>\n        <ul>\n          {cast.map(el => (\n            <li key={el.cast_id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w200/${el.profile_path}`}\n                alt=\"\"\n              />\n              <p>{el.name}</p>\n              <p>{el.character}</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport * as API from '../../services/api';\n\nexport default class Reviews extends Component {\n  state = {\n    reviews: [],\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { movieId } = match.params;\n    this.fetchMovie(movieId);\n  }\n\n  fetchMovie = id => {\n    API.getReviews(id).then(res => {\n      this.setState({ reviews: res.data.results });\n    });\n  };\n\n  render() {\n    const { reviews } = this.state;\n    return (\n      <div>\n        {reviews.length > 0 ? (\n          <ul>\n            {reviews.map(el => (\n              <li key={el.id}>\n                <p>{el.author}</p>\n                <p>{el.content}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>Sorry</p>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport Cast from '../../components/Cast/Cast';\nimport Reviews from '../../components/Reviews/Reviews';\nimport s from './MovieDetailsPage.module.css';\nimport * as API from '../../services/api';\n// import routes from '../../routes';\n\nexport default class MovieDetailsPage extends Component {\n  state = {\n    movie: null,\n    cast: null,\n    reviews: null,\n  };\n\n  componentDidMount() {\n    this.fetchMovie();\n  }\n\n  fetchMovie = () => {\n    const { match } = this.props;\n    const { movieId } = match.params;\n    API.searchExactMovies(movieId).then(res =>\n      this.setState({ movie: res.data }),\n    );\n  };\n\n  returnToPrevLoc = () => {\n    const { history } = this.props;\n    history.goBack();\n  };\n\n  render() {\n    const { movie } = this.state;\n    const { match } = this.props;\n\n    return (\n      <div>\n        <button\n          className={s.button}\n          type=\"button\"\n          onClick={this.returnToPrevLoc}\n        >\n          Go back\n        </button>\n        {movie && (\n          <>\n            <div>\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`}\n                alt=\"\"\n              />\n              <h2>{movie.title}</h2>\n              <p>User score: {movie.vote_average * 10}%</p>\n              <p>Overview: {movie.overview}</p>\n              <p>\n                Genres:{' '}\n                {movie.genres.reduce((acc, e) => `${acc} ${e.name}`, '')}\n              </p>\n\n              <h3>Additional information</h3>\n              <ul>\n                <li>\n                  <Link to={`${match.url}/cast`}>Cast</Link>\n                </li>\n                <li>\n                  <Link to={`${match.url}/reviews`}>Review</Link>\n                </li>\n              </ul>\n            </div>\n            <Switch>\n              <Route path={`${match.path}/cast`} exact component={Cast} />\n              <Route path={`${match.path}/reviews`} component={Reviews} />\n            </Switch>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}