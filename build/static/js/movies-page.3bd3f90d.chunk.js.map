{"version":3,"sources":["services/api.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","components/SearchBar/SearchBar.js","pages/MoviesPage/MoviesPage.js"],"names":["key","popularMovies","axios","get","searchMovies","query","searchExactMovies","id","getCredits","getReviews","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","SearchBar","state","handleChange","e","setState","target","handleSubmit","preventDefault","onSubmit","props","this","onChange","type","Component","MoviesPage","movies","fetchFilms","API","then","res","data","results","onSearchSubmit","history","location","push","search","currentSearch","URLSearchParams","console","log","prevProps","prevState","prevSearch","map","el","to","name","title"],"mappings":"qGAAA,+LAEMA,EAAM,mCAECC,EAAgB,kBAC3BC,IAAMC,IAAN,gEAAmEH,KAExDI,EAAe,SAAAC,GAAK,OAC/BH,IAAMC,IAAN,4DACuDH,EADvD,kBACoEK,KAGzDC,EAAoB,SAAAC,GAAE,OACjCL,IAAMC,IAAN,6CACwCI,EADxC,oBACsDP,EADtD,uCAIWQ,EAAa,SAAAD,GAAE,OAC1BL,IAAMC,IAAN,6CAAgDI,EAAhD,4BAAsEP,KAE3DS,EAAa,SAAAF,GAAE,OAC1BL,IAAMC,IAAN,6CACwCI,EADxC,4BAC8DP,EAD9D,6B,gCCrBa,SAASU,EAAgBC,EAAKX,EAAKY,GAYhD,OAXIZ,KAAOW,EACTE,OAAOC,eAAeH,EAAKX,EAAK,CAC9BY,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZN,EAAIX,GAAOY,EAGND,E,kFCTYO,E,2MAKnBC,MAAQ,CACNP,MAAO,I,EAGTQ,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEV,MAAOS,EAAEE,OAAOX,S,EAGlCY,aAAe,SAAAH,GACbA,EAAEI,kBAGFC,EAFqB,EAAKC,MAAlBD,UACU,EAAKP,MAAfP,OAER,EAAKU,SAAS,CAAEV,MAAO,M,wEAGf,IACAA,EAAUgB,KAAKT,MAAfP,MACR,OACE,0BAAMc,SAAUE,KAAKJ,cACnB,2BAAOZ,MAAOA,EAAOiB,SAAUD,KAAKR,aAAcU,KAAK,SACvD,4BAAQA,KAAK,UAAb,e,GA1B+BC,a,0QCGlBC,E,2MAMnBb,MAAQ,CACNc,OAAQ,I,EA6BVC,WAAa,SAAA7B,GACX8B,IAAiB9B,GAAO+B,MAAK,SAAAC,GAAG,OAC9B,EAAKf,SAAS,CAAEW,OAAQI,EAAIC,KAAKC,c,EAIrCC,eAAiB,SAAAnC,GAAU,IAAD,EACM,EAAKsB,MAA3Bc,EADgB,EAChBA,QAASC,EADO,EACPA,SACjBD,EAAQE,K,+UAAR,IACKD,EADL,CAEEE,OAAO,WAAD,OAAavC,O,mFApCF,IACXqC,EAAad,KAAKD,MAAlBe,SACFG,EAAgB,IAAIC,gBAAgBJ,EAASE,QAAQzC,IAAI,UAC/D4C,QAAQC,IAAIN,GAEPG,GAILjB,KAAKM,WAAWW,K,yCAGCI,EAAWC,GAC5B,IAAMC,EAAa,IAAIL,gBAAgBG,EAAUP,SAASE,QAAQzC,IAChE,UAEMuC,EAAad,KAAKD,MAAlBe,SACFG,EAAgB,IAAIC,gBAAgBJ,EAASE,QAAQzC,IAAI,UAE3DgD,GAAcA,IAAeN,GAIjCjB,KAAKM,WAAWW,K,+BAiBR,IACAZ,EAAWL,KAAKT,MAAhBc,OACR,OACE,6BACE,kBAAC,EAAD,CAAWP,SAAUE,KAAKY,iBAC1B,4BACGP,EAAOmB,KAAI,SAAAC,GAAE,OACZ,wBAAIrD,IAAKqD,EAAG9C,IACV,kBAAC,IAAD,CAAM+C,GAAE,kBAAaD,EAAG9C,KAAO8C,EAAGE,MAAQF,EAAGG,iB,GA1DnBzB","file":"static/js/movies-page.3bd3f90d.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst key = '2964dee6f9b3937b53e885a7fa2424ff';\n\nexport const popularMovies = () =>\n  axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${key}`);\n\nexport const searchMovies = query =>\n  axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${query}`,\n  );\n\nexport const searchExactMovies = id =>\n  axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${key}&append_to_response=videos,images`,\n  );\n\nexport const getCredits = id =>\n  axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${key}`);\n\nexport const getReviews = id =>\n  axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${key}&language=en-US&page=1`,\n  );\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class SearchBar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    value: '',\n  };\n\n  handleChange = e => {\n    this.setState({ value: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { onSubmit } = this.props;\n    const { value } = this.state;\n    onSubmit(value);\n    this.setState({ value: '' });\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input value={value} onChange={this.handleChange} type=\"text\" />\n        <button type=\"submit\">Search</button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as API from '../../services/api';\nimport SearchBar from '../../components/SearchBar/SearchBar';\n\nexport default class MoviesPage extends Component {\n  static propTypes = {\n    history: PropTypes.shape({}).isRequired,\n    location: PropTypes.shape({}).isRequired,\n  };\n\n  state = {\n    movies: [],\n  };\n\n  componentDidMount() {\n    const { location } = this.props;\n    const currentSearch = new URLSearchParams(location.search).get('search');\n    console.log(location);\n\n    if (!currentSearch) {\n      return;\n    }\n\n    this.fetchFilms(currentSearch);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevSearch = new URLSearchParams(prevProps.location.search).get(\n      'search',\n    );\n    const { location } = this.props;\n    const currentSearch = new URLSearchParams(location.search).get('search');\n\n    if (prevSearch && prevSearch === currentSearch) {\n      return;\n    }\n\n    this.fetchFilms(currentSearch);\n  }\n\n  fetchFilms = query => {\n    API.searchMovies(query).then(res =>\n      this.setState({ movies: res.data.results }),\n    );\n  };\n\n  onSearchSubmit = query => {\n    const { history, location } = this.props;\n    history.push({\n      ...location,\n      search: `?search=${query}`,\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n    return (\n      <div>\n        <SearchBar onSubmit={this.onSearchSubmit} />\n        <ul>\n          {movies.map(el => (\n            <li key={el.id}>\n              <Link to={`/movies/${el.id}`}>{el.name || el.title}</Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}